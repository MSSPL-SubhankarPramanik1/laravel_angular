1. Step One — Install Apache
-------------------------------
sudo apt-get update
sudo apt-get install apache2



2. Step Two — Install MySQL
------------------------------
sudo apt-get install mysql-server libapache2-mod-auth-mysql php5-mysql
<root>



3. Step Three — Install PHP
------------------------------
sudo apt-get install php5 libapache2-mod-php5 php5-mcrypt



4. Step Four — RESULTS: See PHP on your Server
-------------------------------------------------
sudo nano /var/www/html/info.php

<?php
phpinfo();
?>

sudo service apache2 restart



5. Step Five — Install Composer
----------------------------------
sudo chmod 777 -R /var/www
curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer



6. Step Six — Install Laravel
--------------------------------
composer global require "laravel/installer=~1.1"
cd /var/www/
export PATH=~/.composer/vendor/bin:$PATH
laravel new laravel_angular
cd laravel_angular
php artisan serve



7. Step Seven — Edit in .env file
------------------------------------
DB_HOST=localhost
DB_DATABASE=laravel_angular
DB_USERNAME=laravel_angular
DB_PASSWORD=laravel_angular123@



8. Step Eight — Install phpMyAdmin
-------------------------------------
sudo apt-get update
sudo apt-get install phpmyadmin
sudo php5enmod mcrypt

by adding :
	ServerName localhost
	Include /etc/phpmyadmin/apache.conf
to the /etc/apache2/apache2.conf file 

sudo service apache2 restart
http://domain_name_or_IP/phpmyadmin


Goto localhost/phpmyadmin
Click Users Tab
Click "Add User"
User name: 	laravel_angular
Host: 		localhost (Select Local) 
Password: 	laravel_angular123@
Re-type: 	laravel_angular123@

Select : 	Create database with same name and grant all privileges
Select : 	Grant all privileges on wildcard name (username\_%)
Select : 	Global privileges - Check All



9. Step Nine — Migration
---------------------------
php artisan migrate
-- php artisan down 			//	Application is now in maintenance mode.
-- php artisan up   			//  Application is now live
-- php artisan key:generate 	// Application key



10. Step Ten — Install Git
-----------------------------
sudo apt-get install git



11. Step Eleven — Git createRepository/clone/push/pull
---------------------------------------------------------
CREATE REPOSITORY:
subhankar@limtexad117:/var/www/laravel_angular$ git init
subhankar@limtexad117:/var/www/laravel_angular$ git add .
subhankar@limtexad117:/var/www/laravel_angular$ git config --global user.email "subhankar.bachchu@gmail.com"
subhankar@limtexad117:/var/www/laravel_angular$ git commit -m "first commit"
subhankar@limtexad117:/var/www/laravel_angular$ git remote add origin https://github.com/subhankarbachchu/converge.git
subhankar@limtexad117:/var/www/laravel_angular$ git push -u origin master

CLONE:
subhankar@limtexad117:/var/www/laravel_angular$ git init
subhankar@limtexad117:/var/www/laravel_angular$ git clone https://github.com/subhankarbachchu/laravel_angular.git
subhankar@limtexad117:/var/www/laravel_angular$ 

PUSH:
subhankar@limtexad117:~$ cd /var/www/laravel_angular
subhankar@limtexad117:/var/www/laravel_angular$ git init
Reinitialized existing Git repository in /var/www/laravel_angular/.git/
subhankar@limtexad117:/var/www/laravel_angular$ git add .
subhankar@limtexad117:/var/www/laravel_angular$ git commit -m "08-01-2015"
subhankar@limtexad117:/var/www/laravel_angular$ git push -u origin master
Username for 'https://github.com': subhankarbachchu
Password for 'https://subhankarbachchu@github.com': 
subhankar@limtexad117:/var/www/laravel_angular$

subhankar@limtexad117:/var/www/laravel_angular$ git commit -a -m "A file was deleted"
subhankar@limtexad117:/var/www/laravel_angular$ git push
Username for 'https://github.com': subhankarbachchu
Password for 'https://subhankarbachchu@github.com': 
subhankar@limtexad117:/var/www/laravel_angular$

PULL:
subhankar@limtexad117:/var/www/laravel_angular$ git init
subhankar@limtexad117:/var/www/laravel_angular$ git pull origin
subhankar@limtexad117:/var/www/laravel_angular$ 


KNOWLEDGE:

1. Class 'Html' not found
-----------------------------
1) add the following in the require section of the composer.json file and run composer update: "illuminate/html": "5.0.* 
2) add this in providers array of config/app.php file:  
	Illuminate\Html\HtmlServiceProvider::class, 
3) register facades by adding these two lines in the aliases array:
	'Form'      => Illuminate\Html\FormFacade::class, 
	'Html'      => Illuminate\Html\HtmlFacade::class,


2. Migration
---------------
php artisan make:migration add_votes_to_users_table --table=users 	// create migration file for existing table
php artisan make:migration create_users_table --create=users 		// create migration file and table

$table->string('role')->after('is_admin'); 		// add column in function up()
$table->dropColumn('role');						// drop column in function down()

php artisan migrate
php artisan migrate:rollback

https://laravel.com/docs/5.1/migrations#migration-structure


3. Create Controller/Model/Table
-----------------------------
php artisan make:controller Blogs
php artisan make:model Blogs

php artisan make:migration create_blogs_table --create=blogs

https://scotch.io/tutorials/a-guide-to-using-eloquent-orm-in-laravel




------------- END ------------	



Create Database
-----------------
mysql -u root -p
SHOW DATABASES;
CREATE DATABASE laravel_angular;
CREATE USER 'laravel_angular'@'localhost' IDENTIFIED BY 'laravel_angular123@';
GRANT ALL PRIVILEGES ON laravel_angular.* TO 'laravel_angular'@'localhost';

https://bhavyanshu.me/tutorials/easy-user-registration-and-authentication-in-laravel-5/09/24/2015/

http://prideparrot.com/blog/archive/2014/4/blog_template_using_twitter_bootstrap3_part1#creating-a-blog-template